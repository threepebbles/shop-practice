name: push on development branch

on:
  push:
    branches: [ "development" ]

permissions: write-all

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean bootJar

      # Unit test 진행
      - name: Test with Gradle
        run: ./gradlew --info test
        env:
          SPRING_PROFILES_ACTIVE: test

      # Unit test에 대한 리포트 작성
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      # 테스트 실패 시, 실패한 코드 라인에 Check 코멘트 등록
      - name: Comment to test failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}
#
#      # Github Container Registry 로그인
#      - name: Login to Github Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.PAT }}
#
#      # Docker buildx 셋업
#      - name: Set up Docker buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v3
#
#      # repository owner 이름 소문자로 치환 (대문자 있으면 에러 발생함)
#      - name: set owner's name to lower case
#        run: |
#          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
#        env:
#          OWNER: '${{ github.repository_owner }}'
#
#      # 버전 태깅
#      - name: Bump version and push tag
#        id: tag_version
#        uses: mathieudutour/github-tag-action@v6.1
#        with:
#          github_token: ${{ secrets.PAT }}
#
#      # Docker 이미지 빌드 및 Github Container Registry에 push
#      - name: Build and Push
#        uses: docker/build-push-action@v5
#        id: docker_build
#        with:
#          context: .
#          file: ./submodule-config/Dockerfile
#          push: true
#          tags: |
#            ghcr.io/${{ env.OWNER_LC }}/swifty-backend:development-latest
#            ghcr.io/${{ env.OWNER_LC }}/swifty-backend:${{ steps.tag_version.outputs.new_tag }}